{"version":3,"sources":["helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","components/AddCategory.jsx","GifExpertApp.jsx","index.js"],"names":["getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","useState","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","key","AddCategory","setCategories","value","setValue","onSubmit","e","preventDefault","trim","length","categories","type","onChange","target","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qNAAaA,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAZhB,kBAgBdM,GAhBc,4CAAH,sDCEL,SAASO,EAAT,GAAyC,EAAlBJ,GAAmB,IAAfC,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IAC/C,OACE,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,ICFK,SAASO,EAAT,GAAgC,IAAbnB,EAAY,EAAZA,SAAY,ECDlB,SAACA,GAAc,IAAD,EACdoB,mBAAS,CACjCb,KAAM,GACNc,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRzB,EAAQC,GAAUyB,MAAK,SAACC,GAAD,OACrBH,EAAS,CACPhB,KAAMmB,EACNL,SAAS,SAGZ,CAACrB,IAEGsB,EDb2BK,CAAa3B,GAAjCa,EAD8B,EACpCN,KAAcc,EADsB,EACtBA,QAEtB,OACE,oCACE,4BAAKrB,GAEJqB,GAAW,wCAEZ,yBAAKL,UAAU,aACZH,EAAOJ,KAAI,SAACmB,GAAD,OACV,kBAACb,EAAD,eAAac,IAAKD,EAAMjB,IAAQiB,S,WEZ3B,SAASE,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EAC3BX,mBAAS,IADkB,mBAC9CY,EAD8C,KACvCC,EADuC,KAgBrD,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAMK,OAAOC,OAAS,IACxBP,GAAc,SAACQ,GAAD,OAAiBP,GAAjB,mBAA2BO,OACzCN,EAAS,OAMT,2BAAOO,KAAK,OAAOR,MAAOA,EAAOS,SAfX,SAACN,GACzBF,EAASE,EAAEO,OAAOV,WCHP,SAASW,IAAgB,IAAD,EACFvB,mBAAS,CAAC,gBADR,mBAC/BmB,EAD+B,KACnBR,EADmB,KAGtC,OACC,oCACC,8CACA,kBAACD,EAAD,CAAaC,cAAeA,IAC5B,6BAECQ,EAAW9B,KAAI,SAACT,GAAD,OACf,kBAACmB,EAAD,CAASU,IAAK7B,EAAUA,SAAUA,Q,MCTtC4C,IAASC,OAAO,kBAACF,EAAD,MAAkBG,SAASC,eAAe,U","file":"static/js/main.3c004a32.chunk.js","sourcesContent":["export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=M8PygrBgQvChq1BP7T4mMHATZPN9ZmJv`;\n\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n","import React from 'react';\n\nexport default function GifGridItem({ id, title, url }) {\n  return (\n    <div className='card animate__animated animate__fadeIn'>\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nexport default function GifGrid({ category }) {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n\n      {loading && <p>Loading..</p>}\n\n      <div className='card-grid'>\n        {images.map((image) => (\n          <GifGridItem key={image.id} {...image} />\n        ))}\n      </div>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) =>\n      setState({\n        data: imgs,\n        loading: false,\n      })\n    );\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function AddCategory({ setCategories }) {\n  const [value, setValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (value.trim().length > 2) {\n      setCategories((categories) => [value, ...categories]);\n      setValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type='text' value={value} onChange={handleInputChange} />\n    </form>\n  );\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport GifGrid from './components/GifGrid';\nimport AddCategory from './components/AddCategory';\n\nexport default function GifExpertApp() {\n\tconst [categories, setCategories] = useState(['Dragon Ball']);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>Gif Expert App</h2>\n\t\t\t<AddCategory setCategories={setCategories} />\n\t\t\t<hr />\n\n\t\t\t{categories.map((category) => (\n\t\t\t\t<GifGrid key={category} category={category} />\n\t\t\t))}\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}